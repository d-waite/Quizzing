<p>Question @QuestionNum</p>

<EditForm Model="@RawData" OnValidSubmit="UpdateQuestion">
<label for="qtype">Question Type:</label>
	<InputSelect name="qtype" id="qtype" @bind-Value="RawData.selectedType" @oninput="onTypeChange">
	<option value="" selected disabled>Select...</option>
	<option value="mc">Multiple Choice</option>
	<option value="s">Speed</option>
</InputSelect>

<label for="qpts">Point Amount:</label>
	<InputSelect name="qpts" id="qpts" @bind-Value="RawData.selectedPoints" disabled="@isMultipleChoice">
	<option value="" selected disabled>Select...</option>
	<option value="20">20</option>
	<option value="30">30</option>
	<option value="40">40</option>
</InputSelect>

<button type="submit">Submit</button>

</EditForm>

@code {

	class rawData
	{
		public string selectedType { get; set; }
		public string selectedPoints { get; set; }
	}

	rawData RawData = new rawData();

	private bool isMultipleChoice = false;
	private string fnCalled = "false";

	[Parameter]
	public string QuestionNum { get; set; }
	[Parameter]
	public List<Question> Questions { get; set; }


	private void onTypeChange(ChangeEventArgs e)
	{
		RawData.selectedType = e.Value?.ToString() ?? "";

		isMultipleChoice = RawData.selectedType == "mc";

		if (isMultipleChoice)
		{
			RawData.selectedPoints = "20";
		}

		StateHasChanged();
	}

	private void UpdateQuestion()
	{

		if (RawData.selectedType != "" && RawData.selectedPoints != "")
		{
			QuestionType SelectedType;
			int SelectedPoints;

			if (RawData.selectedType == "mc")
			{
				SelectedType = QuestionType.MultipleChoice;
			} else
			{
				SelectedType = QuestionType.Speed;
			}

			SelectedPoints = int.Parse(RawData.selectedPoints);

			int qnum = int.Parse(QuestionNum);
			Questions[qnum - 1].Type = SelectedType;
			Questions[qnum - 1].PointAmt = SelectedPoints;
		}
	}
}
